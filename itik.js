const axios = require("axios");
const fs = require("fs");

module.exports.config = {
  name: "itik",
  version: "1.0.0",
  role: 0,
  author: "NLam182 (Zeid_Team)",
  description: "Xem th√¥ng tin c·ªßa acc tiktok qua username",
  category: "Ti·ªán √≠ch",
  usage: "itik <username>",
  cooldowns: 2,
  dependencies: {}
};

module.exports.run = async function({ args, event, api, Users }) {
  const { threadId, type } = event;

  if (!args[0]) {
    return api.sendMessage('Vui l√≤ng nh·∫≠p username ƒë·ªÉ l·∫•y th√¥ng tin.', threadId, type);
  }

  const username = args[0];

  try {
    const apiUrl = `https://api.zeidteam.xyz/tiktok/user-info?username=@${username}`;

    const response = await axios.get(apiUrl);

    if (response.data && response.data.code === 0) {
      const ud = response.data.data.user;
      const st = response.data.data.stats;

      let userInfo = `‚ï≠‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚≠ì\n‚Ä¢ ùêìùêàùêäùêìùêéùêä - ùêàùêßùêüùê® \n‚îú‚îÄ‚îÄ‚îÄ‚îÄ‚≠î\n‚îÇ ¬ª L·∫•y th√¥ng tin c·ªßa ng∆∞·ªùi d√πng tr√™n tiktok.\n`;

      userInfo += `‚îú‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚≠î\n`;
      
      userInfo += `‚îÇ ¬ª T√™n t√†i kho·∫£n: ${ud.nickname}\n`;
      userInfo += `‚îÇ ¬ª Username: ${ud.uniqueId}\n`;
      userInfo += `‚îÇ ¬ª ID: ${ud.id}\n`;
        if (ud.signature) {
        userInfo += `‚îÇ ¬ª Ti·ªÉu s·ª≠:\n`;
        const signatureLines = ud.signature.split("\n");
        signatureLines.forEach((line) => {
          userInfo += `‚îÇ ${line}\n`;
        });
      }

      userInfo += `‚îÇ ¬ª Tick xanh: ${ud.verified ? '‚úÖ' : '‚ùé'}\n`;
      userInfo += `‚îÇ ¬ª M·ªëi quan h·ªá: ${ud.relation}\n`;
      userInfo += `‚îÇ ¬ª Tr·∫°ng th√°i: ${ud.verified ? 'C√¥ng khai' : 'Ri√™ng t∆∞'}\n`;
      userInfo += `‚îÇ ¬ª D∆∞·ªõi 18t: ${ud.isUnderAge18 ? '‚úÖ' : '‚ùé'}\n`;

      if (ud.ins_id) {
        userInfo += `‚îÇ ¬ª Ins ID: ${ud.ins_id}\n`;
      }

      if (ud.twitter_id) {
        userInfo += `‚îÇ ¬ª Tw ID: ${ud.twitter_id}\n`;
      }

      if (ud.youtube_channel_title) {
        userInfo += `‚îÇ ¬ª Youtube: ${ud.youtube_channel_title}\n`;
      }
      userInfo += `‚îú‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚≠î\n`;
      userInfo += `‚îÇ ¬ª Ng∆∞·ªùi theo d√µi: ${st.followerCount}\n`;
      userInfo += `‚îÇ ¬ª ƒêang theo d√µi: ${st.followingCount}\n`;
      userInfo += `‚îÇ ¬ª S·ªë tim: ${st.heartCount}\n`;
      userInfo += `‚îÇ ¬ª S·ªë video: ${st.videoCount}\n‚ï∞‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚≠ì`;

      
      const imageUrl = ud.avatarMedium;
      const imageResponse = await axios.get(imageUrl, { responseType: "arraybuffer" });
      const imageData = Buffer.from(imageResponse.data, "binary");

      const imageFileName = "avatarmedium.jpg"; 
      fs.writeFileSync(imageFileName, imageData);
      
      
      api.sendMessage({
        msg: userInfo,
        attachments: [imageFileName]
      }, threadId, type);
      
      setTimeout(() => {
        try {
          fs.unlinkSync(imageFileName);
        } catch (e) {
          console.log('File ƒë√£ ƒë∆∞·ª£c x√≥a ho·∫∑c kh√¥ng t·ªìn t·∫°i');
        }
      }, 3000);
    } else if (response.data && response.data.code === -1) {
      api.sendMessage('Kh√¥ng t√¨m th·∫•y th√¥ng tin ng∆∞·ªùi d√πng.', threadId, type);
    } else {
      api.sendMessage('Kh√¥ng t√¨m th·∫•y th√¥ng tin ng∆∞·ªùi d√πng.', threadId, type);
    }
  } catch (error) {
    console.error(error);
    api.sendMessage('C√≥ l·ªói x·∫£y ra khi l·∫•y th√¥ng tin t·ª´ TikTok.', threadId, type);
  }
};
