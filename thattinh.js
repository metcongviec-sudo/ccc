const fs = require('fs');
const path = require('path');
const axios = require('axios');
const { ThreadType } = require('zca-js');

module.exports.config = {
  name: 'thattinh',
  aliases: ['th·∫•t t√¨nh', 'that_tinh', 'thatinh', 'that-tinh'],
  version: '1.0.0',
  role: 0,
  author: 'Cascade',
  description: 'G·ª≠i ng·∫´u nhi√™n nh·ªØng c√¢u quote/·∫£nh th·∫•t t√¨nh',
  category: 'Gi·∫£i tr√≠',
  usage: 'bonz th·∫•t t√¨nh | thattinh',
  cooldowns: 3
};

const QUOTES = [
  'C√≥ nh·ªØng n·ªói bu·ªìn kh√¥ng t√™n, ch·ªâ bi·∫øt im l·∫∑ng v√† ƒë·ªÉ n√≥ tr√¥i qua...',
  'Th∆∞∆°ng m·ªôt ng∆∞·ªùi kh√¥ng th∆∞∆°ng m√¨nh l√† v·∫øt th∆∞∆°ng s√¢u nh·∫•t.',
  'H√≥a ra ch√∫ng ta ch·ªâ l∆∞·ªõt qua ƒë·ªùi nhau nh∆∞ c∆°n gi√≥.',
  'C≈© r·ªìi, c·∫£m x√∫c ·∫•y... nh∆∞ng m·ªói l·∫ßn nh·ªõ l·∫°i v·∫´n ƒëau nh∆∞ l·∫ßn ƒë·∫ßu.',
  'Em ·ªïn, th·∫≠t ƒë·∫•y. Ch·ªâ l√† ƒë√¥i khi tim nh√≥i m·ªôt ch√∫t khi nh·ªõ v·ªÅ anh.',
  'Ng∆∞·ªùi ƒë·∫øn th√¨ t√¨nh n·ªìng, ng∆∞·ªùi ƒëi th√¨ l√≤ng tr·ªëng r·ªóng.',
  'C√≥ nh·ªØng h·∫πn ∆∞·ªõc ch·ªâ ƒë·ªÉ l·∫°i trong l√≤ng, kh√¥ng th·ªÉ tr·ªü th√†nh t∆∞∆°ng lai.',
  'Bu√¥ng tay kh√¥ng ph·∫£i v√¨ h·∫øt y√™u, ch·ªâ l√† kh√¥ng th·ªÉ gi·ªØ.',
  'Th·∫•t t√¨nh kh√¥ng ƒë√°ng s·ª£, ƒë√°ng s·ª£ l√† kh√¥ng c√≤n tin v√†o t√¨nh y√™u.',
  'Gi·ªØa ph·ªë ƒë√¥ng ng∆∞·ªùi, v·∫´n c·ª© th·∫•y m√¨nh l·∫ª loi.'
];

const IMAGES = [
  // M·ªôt v√†i ·∫£nh minh h·ªça nh·∫π nh√†ng (jpeg/png/gif)
  'https://i.postimg.cc/jjbXJ9tC/sad1.jpg',
  'https://i.postimg.cc/7LQX9JwN/sad2.jpg',
  'https://i.postimg.cc/9f9q3P1M/sad3.jpg',
  'https://i.postimg.cc/90M05mrt/sad4.jpg'
];

module.exports.run = async ({ api, event }) => {
  const { threadId, type } = event;

  // L·∫•y quote b·∫±ng AI, fallback sang QUOTES n·∫øu l·ªói
  let quote = '';
  try {
    const uid = event?.data?.uidFrom || event?.authorId || '';
    let displayName = '';
    try {
      const info = await api.getUserInfo(uid);
      displayName = info?.changed_profiles?.[uid]?.displayName || '';
    } catch {}
    const basePrompt = `Vi·∫øt M·ªòT c√¢u quote NG·∫ÆN (<= 160 k√Ω t·ª±), gi·ªçng bu·ªìn nh∆∞ng t√≠ch c·ª±c, v·ªÅ th·∫•t t√¨nh b·∫±ng ti·∫øng Vi·ªát${displayName ? `, x∆∞ng t√™n ${displayName}` : ''}. Kh√¥ng d√πng k√Ω t·ª± trang tr√≠.`;
    const url = `https://api.zeidteam.xyz/ai/chatgpt4?prompt=${encodeURIComponent(basePrompt)}`;
    const res = await axios.get(url, { timeout: 8000, headers: { 'User-Agent': 'Mozilla/5.0' } });
    let aiText = res?.data;
    if (typeof aiText === 'object') {
      aiText = aiText?.content || aiText?.message || aiText?.data || '';
    }
    if (typeof aiText === 'string') {
      aiText = aiText.replace(/^["'‚Äú‚Äù\s]+|["'‚Äú‚Äù\s]+$/g, '');
      if (aiText.length > 200) aiText = aiText.slice(0, 200).trim();
      quote = aiText;
    }
  } catch (_) {}

  if (!quote) {
    quote = QUOTES[Math.floor(Math.random() * QUOTES.length)];
  }
  const header = 'üíî Th·∫•t t√¨nh ∆∞? Kh√¥ng sao, r·ªìi s·∫Ω ·ªïn th√¥i...';
  const msg = `${header}\n\n"${quote}"`;

  // 30% k√®m ·∫£nh (tr√°nh ph·ª• thu·ªôc m·∫°ng qu√° nhi·ªÅu)
  const attachImage = Math.random() < 0.3;
  if (!attachImage) {
    return api.sendMessage({ msg }, threadId, type);
  }

  const tmpDir = path.join(__dirname, 'temp');
  try { if (!fs.existsSync(tmpDir)) fs.mkdirSync(tmpDir, { recursive: true }); } catch {}

  const imageUrl = IMAGES[Math.floor(Math.random() * IMAGES.length)];
  const ext = path.extname(new URL(imageUrl).pathname) || '.jpg';
  const filePath = path.join(tmpDir, `thattinh_${Date.now()}${ext}`);

  try {
    const res = await axios.get(imageUrl, { responseType: 'arraybuffer', headers: { 'User-Agent': 'Mozilla/5.0' } });
    const buf = Buffer.from(res.data);
    fs.writeFileSync(filePath, buf);

    await api.sendMessage({ msg, attachments: [filePath] }, threadId, type);
  } catch (e) {
    // N·∫øu t·∫£i ·∫£nh l·ªói, g·ª≠i text th√¥i
    await api.sendMessage({ msg }, threadId, type);
  } finally {
    // D·ªçn file sau 5 gi√¢y n·∫øu t·ªìn t·∫°i
    setTimeout(() => { try { if (fs.existsSync(filePath)) fs.unlinkSync(filePath); } catch {} }, 5000);
  }
};
